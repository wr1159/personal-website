---
import '@fontsource/geist-mono';
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Hi I am Chu Wei Rong, a computer science student!" />
		<meta name="author" content="Chu Wei Rong" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<meta
				property="og:title"
				content={title}
			/>
			<meta property="og:url" content="https://weirong.ch/" />
			<meta property="og:type" content="website" />
			<meta
				property="og:image"
				content="/og-image.png"
			/>
			<meta
				property="og:description"
				content="Hi, I am Wei Rong!"
			/>
			<meta
				name="twitter:title"
				content={title}
			/>
			<meta
				name="twitter:image"
				content="/og-image.png"
			/>
			<meta name="twitter:card" content="summary_large_image" />
	</head>
	<body>
		<div class="container">
			<slot />
		</div>

	</body>
	<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
</html>